{"version":3,"sources":["components/navbar.js","components/products/product/rating/rating.js","actions/index.js","components/products/product/product.js","components/filter/filterTitle/filterTitle.js","components/filter/filterPrice/filterPrice.js","components/filter/filter.js","components/products/products.js","components/cart/cartProduct/cartProduct.js","components/cart/cart.js","components/overlay/overlay.js","App.js","serviceWorker.js","reducers/overlay.js","reducers/cart.js","reducers/common.js","reducers/index.js","index.js"],"names":["Navbar","className","Rating","props","rating","stars","i","push","icon","faStar","style","color","getRating","map","item","index","key","removeFromCart","productTitle","type","playload","filterByTitle","connect","dispatch","addToCart","showOverlay","openCart","prod","product","src","process","filename","alt","title","description","price","onClick","useState","setTitle","useEffect","data-toggle","data-target","faChevronDown","onChange","e","target","value","placeholder","aria-label","aria-describedby","FilterPrice","id","htmlFor","header","Filter","products","useSelector","state","common","productList","productData","setProductList","productItem","quantity","faTimes","cartFooter","totalPrice","cart","isCartOpen","hideOverlay","closeCart","cartClasses","classNames","Object","entries","length","values","reduce","acc","cartProd","isShown","overlay","CSSTransition","in","timeout","enter","exit","unmountOnExit","displayCart","Boolean","window","location","hostname","match","initState","isProductInCart","some","addProduct","newProducts","updateQuantity","removeProductFromCart","filter","filterProductsByTitle","console","log","includes","rootReducer","combineReducers","action","assign","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cb188b6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark\">\r\n            <h2 className=\"text-light mx-auto\">Product List Page</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Rating(props) {\r\n    const { rating } = props;\r\n\r\n    const getRating = (rating) => {\r\n        const stars = [];\r\n        let i = 0;\r\n        while(i<5) {\r\n            if(i >= rating) {\r\n                stars.push(\r\n                    <FontAwesomeIcon icon={faStar} style={{color: \"#DBDBDB\"}}/>\r\n                )\r\n            } else {\r\n                stars.push(\r\n                    <FontAwesomeIcon icon={faStar} style={{color: \"#FFD700\"}}/>\r\n                )\r\n            }\r\n            i++;\r\n        }\r\n        return stars;\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            {getRating(rating).map((item, index) => {\r\n                return (\r\n                    <span key={index}>\r\n                        {item}\r\n                    </span>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating;\r\n","export const addToCart = product => ({\r\n    type: 'ADD_TO_CART',\r\n    playload: product\r\n});\r\n\r\nexport const removeFromCart = productTitle => ({\r\n    type: 'REMOVE_FROM_CART',\r\n    playload: productTitle\r\n});\r\n\r\nexport const setProductList = productList => ({\r\n    type: 'SET_PRODUCT_LIST',\r\n    playload: productList\r\n});\r\n\r\nexport const filterByTitle = productTitle => ({\r\n    type: 'FILTER_BY_TITLE',\r\n    playload: productTitle\r\n});\r\n\r\nexport const filterByPrice = productTitle => ({\r\n    type: 'FILTER_BY_PRICE',\r\n    playload: productTitle\r\n});\r\n\r\nexport const hideOverlay = () => ({\r\n    type: 'HIDE_OVERLAY'\r\n});\r\n\r\nexport const showOverlay = () => ({\r\n    type: 'SHOW_OVERLAY'\r\n});\r\n\r\nexport const openCart = () => ({\r\n    type: 'OPEN_CART'\r\n});\r\n\r\nexport const closeCart = () => ({\r\n    type: 'CLOSE_CART'\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Rating from './rating/rating';\r\nimport { addToCart } from '../../../actions/index';\r\nimport { showOverlay } from '../../../actions/index';\r\nimport { openCart } from '../../../actions/index';\r\nimport './product.scss';\r\n\r\nconst Product = (props) => {\r\n    const prod = props.product;\r\n    const { addToCart, showOverlay, openCart } = props;\r\n\r\n    const handleAddToCart = product => {        \r\n        addToCart(product);\r\n        openCart();\r\n        showOverlay();\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xs-12 col-md-4 card mb-4\">\r\n            <div className=\"card__wrapper d-flex flex-column shadow-sm rounded p-2\">\r\n                <div className=\"card__img\">\r\n                    <img src={`${process.env.PUBLIC_URL}/assets/images/${prod.filename}`} className=\"card-img-top\" alt=\"...\"/>\r\n                </div>\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">{prod.title}</h5>\r\n                    <p className=\"card-text\">{prod.description}</p>\r\n                    <Rating rating={prod.rating}/>\r\n                    <p className=\"card__price d-flex justify-content-center font-weight-bold\">${prod.price}</p>\r\n                    <button className=\"card-btn btn btn-primary\" onClick={() => handleAddToCart(prod)}>Add to Cart</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    addToCart: item => dispatch(addToCart(item)),\r\n    showOverlay: () => dispatch(showOverlay()),\r\n    openCart: () => dispatch(openCart()),\r\n})\r\nexport default connect(null,mapDispatchToprops)(Product);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { filterByTitle } from '../../../actions/index';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction FilterTitle(props) {\r\n    const { dispatch } = props;\r\n    const [title, setTitle] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(filterByTitle(title))\r\n    }, [dispatch, title])\r\n\r\n    return (\r\n        <div className=\"filter__title mt-3 pb-3\">\r\n            <div className=\"filter__title-header d-flex justify-content-between align-items-center mb-3\" data-toggle=\"collapse\" data-target=\".filter__title-body\">\r\n                <span className=\"font-weight-bold\">Title</span>\r\n                <span><FontAwesomeIcon icon={faChevronDown}/></span>\r\n            </div>\r\n            <div className=\"filter__title-body collapse\">\r\n                <input onChange={(e) => setTitle(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Product title\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(FilterTitle);\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction FilterPrice() {\r\n    return (\r\n        <div className=\"filter__price mt-3 pb-3\">\r\n            <div className=\"filter__price-header d-flex justify-content-between align-items-center mb-3\" data-toggle=\"collapse\" data-target=\".filter__price-body\">\r\n                <span className=\"font-weight-bold\">Price</span>\r\n                <span><FontAwesomeIcon icon={faChevronDown}/></span>\r\n            </div>\r\n            <div className=\"filter__price-body collapse\">\r\n                <div className=\"form-group form-check\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Descendent</label>\r\n                </div>\r\n                <div className=\"form-group form-check\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Ascendent</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterPrice\r\n","import React from 'react';\r\nimport FilterTitle from './filterTitle/filterTitle';\r\nimport FilterPrice from './filterPrice/filterPrice';\r\nimport './filter.scss';\r\n\r\nfunction Filter() {\r\n    \r\n    return (\r\n        <div className=\"filter border border-dark\">\r\n            {header()}\r\n            <div className=\"\">\r\n                <FilterTitle />\r\n                <FilterPrice />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst header = () => (\r\n    <div className=\"filter__header\">\r\n        <span className=\"navbar-brand mb-0 h1 font-weight-bold\">Filter</span>\r\n    </div>\r\n)\r\n\r\nexport default Filter;\r\n","import React,{ useState, useEffect } from 'react';\r\nimport productData from '../../data/products';\r\nimport Product from './product/product';\r\nimport Filter from '../filter/filter';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { setProductList } from '../../actions';\r\nconst Products = (props) => {\r\n    const { dispatch } = props;\r\n    const { products } = useSelector(state => ({products: state.common.productList}))    \r\n    const [productList] = useState(productData);\r\n    useEffect(() => {\r\n        dispatch(setProductList(productList))\r\n    },[productList])\r\n    return (\r\n        \r\n        \r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-xs-12 col-md-3\">\r\n                <Filter />\r\n            </div>\r\n            <div className=\"col-xs-12 col-md-9\">\r\n                <div className=\"row\">\r\n                    {products.map((productItem, index) => <Product key={index} product={productItem}/>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default connect()(Products);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { removeFromCart } from '../../../actions/index';\r\nimport './productCart.scss'\r\n\r\nfunction CartProduct(props) {\r\n    const { product, dispatch } = props;\r\n    return (\r\n        <div className=\"cart__product card mb-3\">\r\n            <div className=\"row no-gutters align-items-center\">\r\n                <div className=\"col-md-2 d-flex align-items-center\">\r\n                    <img src={`${process.env.PUBLIC_URL}/assets/images/${product.filename}`} className=\"card-img\" alt={product.filename} />\r\n                </div>\r\n                <div className=\"product__info col-md-10 flex-grow-1\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{product.title}</h5>\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-primary\">${product.price}</small>\r\n                            <small className=\"text-primary\"> / Qte: {product.quantity}</small>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn\" onClick={() => dispatch(removeFromCart(product.title))}>\r\n                    <FontAwesomeIcon icon={faTimes} style={{color:\"rgba(0,0,0,.5)\"}} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(CartProduct);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { hideOverlay } from '../../actions/index';\r\nimport { closeCart } from '../../actions/index';\r\nimport './cart.scss';\r\nimport CartProduct from './cartProduct/cartProduct';\r\n\r\nconst Cart = (props) => {\r\n    const { products, closeCart, hideOverlay } = props;\r\n    const cartClasses = classNames({\r\n        'cart': true,\r\n    })\r\n\r\n    const handleCart = () => {        \r\n        closeCart();\r\n        hideOverlay();\r\n    }\r\n\r\n    let totalPrice = 0;\r\n\r\n    if(Object.entries(products).length !== 0) {\r\n        totalPrice = Object.values(products).reduce(((acc, { price, quantity }) => acc + price * quantity ), 0);\r\n    }\r\n\r\n    return (\r\n        <div className={cartClasses}>\r\n            <div className=\"cart__wrapper\">\r\n                <div className=\"cart__header navbar navbar-light bg-light\">\r\n                    <span className=\"navbar-brand\">Your Cart</span>\r\n                    <button className=\"cart__close btn btn-light\" onClick={() => handleCart()}>\r\n                        <FontAwesomeIcon icon={faTimes} style={{color:\"rgba(0,0,0,.5)\"}} />\r\n                    </button>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 overflow-auto px-3\">\r\n                    { products.map((cartProd, index) => <CartProduct key={index} product={cartProd}/>) }\r\n                </div>\r\n                {cartFooter(totalPrice)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst cartFooter = (totalPrice) => {\r\n    return (\r\n        <div className=\"cart__footer d-flex flex-column justify-content-center px-3\">\r\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span className=\"text-body font-weight-bolder\">TOTAL PRICE</span>\r\n                <span className=\"text-primary font-weight-bold\">${totalPrice}</span>\r\n            </div>\r\n            <div className=\"checkout\">\r\n                <button className=\"checkout__btn btn btn-primary\">Checkout</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products : state.cart.products,\r\n    isCartOpen : state.cart.isCartOpen\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    hideOverlay: () => dispatch(hideOverlay()),\r\n    closeCart: () => dispatch(closeCart()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Cart);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport { hideOverlay } from '../../actions/index';\r\nimport { closeCart } from '../../actions/index';\r\nimport './overlay.scss'\r\n\r\nfunction Overlay(props) {\r\n    const { isShown, closeCart, hideOverlay } = props;\r\n    const cartClasses = classNames({\r\n        'open': isShown === true,\r\n        'close': isShown === false,\r\n    })\r\n\r\n    const handleCart = () => {\r\n        closeCart();\r\n        hideOverlay();\r\n    }\r\n\r\n    return (\r\n        <div id=\"overlay\" className={cartClasses} onClick={() => handleCart()}></div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isShown: state.overlay.isShown\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    hideOverlay: () => dispatch(hideOverlay()),\r\n    closeCart: () => dispatch(closeCart()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Overlay);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport Navbar from './components/navbar';\r\nimport Products from './components/products/products';\r\nimport Cart from './components/cart/cart';\r\nimport Overlay from './components/overlay/overlay';\r\nimport './App.scss'\r\n\r\nfunction App(props) {\r\n  const { isCartOpen } = props;\r\n  const displayCart = isCartOpen => {\r\n      return (\r\n      <CSSTransition\r\n        in={isCartOpen}\r\n        timeout={{ enter: 1000, exit: 1000}}\r\n        classNames=\"cart\"\r\n        unmountOnExit\r\n        >\r\n        <Cart />\r\n      </CSSTransition>\r\n      )\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Products />        \r\n        {displayCart(isCartOpen)}\r\n        <Overlay />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isCartOpen: state.cart.isCartOpen,\r\n  isShown: state.overlay.isShown\r\n})\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    isShown: false,\r\n}\r\nexport const overlay = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'SHOW_OVERLAY': \r\n            return {\r\n                isShown: true\r\n            }\r\n        case 'HIDE_OVERLAY': \r\n            return {\r\n                isShown: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initState = {\r\n    isCartOpen: false,\r\n    products: [],\r\n}\r\nexport default (state = initState, action) => {\r\n    let newProducts = Object.assign([],state.products);\r\n\r\n    switch(action.type) {\r\n        case 'OPEN_CART': \r\n            return {\r\n                ...state,\r\n                isCartOpen: true\r\n            }\r\n        case 'CLOSE_CART': \r\n            return {\r\n                ...state,\r\n                isCartOpen: false\r\n            }\r\n        case 'ADD_TO_CART': \r\n            if(isProductInCart(newProducts, action.playload)) {                \r\n                return updateQuantity(state, {newProducts, product: action.playload});\r\n            } else {                \r\n                return addProduct(state, {newProducts, product: action.playload});\r\n            }\r\n        case 'REMOVE_FROM_CART':\r\n            return removeProductFromCart(state, {newProducts, title: action.playload});\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst isProductInCart = (cart, product) => cart.some(({ title }) => title === product.title);\r\n\r\nconst addProduct = (state, {newProducts, product}) => {\r\n    product.quantity = 1;\r\n    newProducts.push(product);\r\n    return {\r\n        ...state,\r\n        isCartOpen: true,\r\n        products: newProducts,\r\n    }\r\n}\r\n\r\nconst updateQuantity = (state, {newProducts, product}) => {\r\n    newProducts.map(item => {\r\n        if(item.title === product.title) {\r\n            return item.quantity = product.quantity + 1;\r\n        }\r\n        return product.quantity;\r\n    })\r\n    return {\r\n        ...state,\r\n        isCartOpen: true,\r\n        products: newProducts,\r\n    } \r\n}\r\n\r\nconst removeProductFromCart = (state, {newProducts, title}) => {\r\n    newProducts = newProducts.filter(item => item.title !== title);    \r\n    return {\r\n        ...state,\r\n        products: newProducts,\r\n    } \r\n}","const initState = {\r\n    productList : []\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    let newProducts = Object.assign([],state.productList);\r\n\r\n    switch(action.type) {\r\n        case 'FILTER_BY_TITLE':\r\n            console.log('FILTER_BY_TITLE',action);\r\n            if(action.playload !== '') {\r\n                return filterProductsByTitle(state, {newProducts, title: action.playload});\r\n            } else {\r\n                return state;\r\n            }\r\n        case 'SET_PRODUCT_LIST':\r\n            console.log(action);\r\n            \r\n            return {\r\n                ...state,\r\n                productList: action.playload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst filterProductsByTitle = (state, {newProducts, title}) => {\r\n    console.log(title);\r\n\r\n    newProducts = newProducts.filter(item => item.title.includes(title));\r\n    console.log(state);\r\n    \r\n    return {\r\n        ...state,\r\n        productList: newProducts,\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { overlay } from './overlay';\r\nimport cart from './cart';\r\nimport common from './common'\r\n\r\nconst rootReducer = combineReducers({\r\n    // cart: addToCart,\r\n    overlay: overlay,\r\n    // handleCart: handleCart\r\n    cart,\r\n    common,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}